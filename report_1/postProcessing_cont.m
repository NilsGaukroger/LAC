% 46320 LAC Course
% Assignment 3: Post-processing
% Authors: Nikolaos Stamatopoulos, Nils Joseph Gaukroger, Stefanos Masalas,
% Eduardo Fredrich de Miranda
% 28th October 2021

close all; clear variables; clc

%% Add functions folder to path
addpath('functions\')

%% Load data from postProcessing_stab
load('postProcessing_stab.mat');

%% Create table for gains (cases C1-C6)
caseName        = ["C1";"C2";"C3";"C4";"C5";"C6"];
generatorTorque = ["Constant Power";"Constant Power";"Constant Power";...
    "Constant Torque";"Constant Torque";"Constant Torque"];
genTorque_switch = [1;1;1;0;0;0];
partialLoad_omega = 0.05 * ones(6,1);
partialLoad_zeta  = 0.7  * ones(6,1);
fullLoad_omega  = [0.05; 0.01; 0.10; 0.05; 0.01; 0.10]; % natural frequency [Hz]
fullLoad_zeta   = [ 0.7;  0.7;  0.7;  0.7;  0.7;  0.7]; % damping ratio [-]

gains = table(caseName,generatorTorque,partialLoad_omega,partialLoad_zeta,fullLoad_omega,fullLoad_zeta);

%% Import gains from *_ctrl_tuning.txt
% File import settings
order = 2; % Order of aerodynamic gain scheduling fit (1 = linear, 2 = quadratic)

% Preallocation
[gains.("Region 1: K"),gains.("Region 2: I"),gains.("Region 2: Kp"),gains.("Region 2: Ki"),...
    gains.("Region 3: Kp"),gains.("Region 3: Ki"),gains.("Region 3: K1"),gains.("Region 3: K2")] = deal(NaN(size(gains,1),1));

% for i = 1:length(caseName)
for i = 1:1
    filename = strcat("./your_model/results_redesign/cont/", caseName(i), "/redesign_cont_HS2_ctrl_tuning.txt");
    [gains.("Region 1: K")(i),gains.("Region 2: I")(i),gains.("Region 2: Kp")(i),gains.("Region 2: Ki")(i),...
        gains.("Region 3: Kp")(i),gains.("Region 3: Ki")(i),gains.("Region 3: K1")(i),gains.("Region 3: K2")(i)] = import_gains(filename,order);
end

disp(gains)

%% Write gains.dat files

% copy new values from .htc
% for i = 1:length(caseName)
for i = 1:1
fileID = fopen(strcat('your_model/data/gains_C', num2str(i), '.dat'), 'w');
fprintf(fileID,['; Overall parameters\n',...
'        constant	1 10000;	Rated power [kW]\n',...
'        constant	2 0;	Minimum rotor (LSS) speed [rad/s]\n',...
'        constant	3 0.778;	Rated rotor (LSS) speed [rad/s]\n',...
'        constant	4 15600000;	Maximum allowable generator torque [Nm]\n',...
'        constant	5 0.000535;	Minimum pitch angle, theta_min [deg],\n',...
'; if |theta_min|>90, then a table of <wsp,theta_min> is read ;\n',...
'; from a file named ''wptable.n'', where n=int(theta_min)\n',...
'        constant	6 82;	Maximum pitch angle [deg]\n',...
'        constant	7 10;	Maximum pitch velocity operation [deg/s]\n',...
'        constant	8 0.4;	Frequency of generator speed filter [Hz]\n',...
'        constant	9 0.7;	Damping ratio of speed filter [-]\n',...
'        constant	10 1.8;	Frequency of free-free DT torsion mode [Hz], if zero no notch filter used\n',...
'; Partial load control parameters\n',...
'        constant	11 %d;	Optimal Cp tracking K factor [Nm/(rad/s)^2], ;\n',...
'; Qg=K*Omega^2, K=eta*0.5*rho*A*Cp_opt*R^3/lambda_opt^3\n',...
'        constant	12 %d;	Proportional gain of torque controller [Nm/(rad/s)]\n',...
'        constant	13 %d;	Integral gain of torque controller [Nm/rad]\n',...
'        constant	14 0;	Differential gain of torque controller [Nm/(rad/s^2)]\n',...
';     Full load control parameters\n',...
'        constant	15 %d;	Generator control switch [1=constant power, 0=constant torque]\n',...
'        constant	16 %.5f;	Proportional gain of pitch controller [rad/(rad/s)]\n',...
'        constant	17 %.6f;	Integral gain of pitch controller [rad/rad]\n',...
'        constant	18 0;	Differential gain of pitch controller [rad/(rad/s^2)]\n',...
'        constant	19 4e-09;	Proportional power error gain [rad/W]\n',...
'        constant	20 4e-09;	Integral power error gain [rad/(Ws)]\n',...
'        constant	21 %.1f;	Coefficient of linear term in aerodynamic gain scheduling, KK1 [deg]\n',...
'        constant	22 %.1f;	Coefficient of quadratic term in aerodynamic gain scheduling, KK2 [deg^2] &\n',...
'; (if zero, KK1 = pitch angle at double gain)\n'],...
gains.("Region 1: K")(i),gains.("Region 2: Kp")(i),gains.("Region 2: Ki")(i),...
genTorque_switch(i),gains.("Region 3: Kp")(i),gains.("Region 3: Ki")(i),...
gains.("Region 3: K1")(i),gains.("Region 3: K2")(i));
fprintf(fileID,'exit;');
fclose(fileID);
end

% Further work: Add constants up to 95 for ability to vary rotor diameter, optimal tsr etc.

%% Plots from .sel